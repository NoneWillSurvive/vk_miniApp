{"version":3,"sources":["components/Home/Home.js","api/api.js","redux/homeReducer.js","components/Home/HomeContainer.js","redux/firendsReducer.js","components/Friends/Friends.js","components/Friends/FriendsContainer.js","App.js","redux/redux-store.js","index.js"],"names":["Home","props","id","title","before","photo","size","src","description","age","firstName","secondName","indicator","friendsCount","level","onClick","go","data-to","getDataAPI","bridge","send","then","response","userId","access_token","catch","reason","Error","pageSize","offsetSize","initialState","isFetching","homeReducer","state","action","type","profile","HomeContainer","this","getHome","style","marginTop","React","Component","connect","home","dispatch","photo_200","first_name","last_name","counters","friends","bDate","Date","bdate","getFullYear","isNaN","getAge","setHome","numberOfFriends","offset","fetchingData","friendsReducer","numberFriends","count","fetchingState","setOffset","toggleFetchingData","scroller","require","animateScroll","osName","platform","Friends","friendsArray","map","element","index","after","left","IOS","getFriends","scrollTo","mode","FriendsContainer","setDefaultData","friendsPage","items","App","useState","activeView","setActiveView","e","currentTarget","dataset","to","activePanel","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b73e19ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Counter from \"@vkontakte/vkui/dist/components/Counter/Counter\";\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline';\r\n\r\n\r\nlet Home = (props) => {\r\n    return (\r\n        <Panel id={props.id}>\r\n            <PanelHeader>TargetHunter</PanelHeader>\r\n            <Group title=\"User Data Fetched with VK Bridge\">\r\n                <Cell\r\n                    before={props.photo ? <Avatar size={80} src={props.photo}/> : null}\r\n                    description={`Возраст: ${props.age ?  ` ${props.age} лет` : ` не указано.`}`}\r\n                >\r\n                    {`${props.firstName} ${props.secondName}`}\r\n                </Cell>\r\n            </Group>\r\n\r\n            <Group title=\"Navigation Example\">\r\n                    <List>\r\n                        <Cell before={<Icon28UserOutline />} indicator={<Counter>{props.friendsCount}</Counter>}>Друзья</Cell>\r\n                    </List>\r\n                <Div>\r\n                    <Button size=\"xl\" level=\"2\" onClick={props.go} data-to=\"friendsView\">\r\n                        {`Посмотреть друзей`}\r\n                    </Button>\r\n                </Div>\r\n            </Group>\r\n        </Panel>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nexport const getDataAPI = {\r\n    getProfileInfo() {\r\n        return bridge.send(\"VKWebAppGetUserInfo\", {}).then(\r\n            response => {\r\n                let userId = response.id;\r\n                return bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7542538, \"scope\": \"friends\"}).then(\r\n                    response => {\r\n                        return bridge.send(\"VKWebAppCallAPIMethod\",\r\n                            {\r\n                                \"method\": \"users.get\", \"request_id\": \"32test\",\r\n                                \"params\": {\r\n                                    \"user_ids\": userId, \"v\": \"5.120\",\r\n                                    \"fields\": \"counters,bdate,photo_200\",\r\n                                    \"access_token\": response.access_token\r\n                                }\r\n                            }).then(response => response.response[0])\r\n                    });\r\n            }\r\n        ).catch( reason => {throw new Error(\"Error Auth User: \" + reason)} );\r\n    },\r\n\r\n    getFriends(pageSize, offsetSize) {\r\n        return bridge.send(\"VKWebAppGetUserInfo\", {}).then(\r\n            response => {\r\n                let userId = response.id;\r\n                return bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7542538, \"scope\": \"friends\"}).then(\r\n                    response => {\r\n                        return bridge.send(\"VKWebAppCallAPIMethod\",\r\n                            {\r\n                                \"method\": \"friends.get\",\"request_id\": \"32test\",\r\n                                \"params\": {\r\n                                    \"user_ids\": userId, \"v\": \"5.120\",\r\n                                    \"order\": \"hints\",\r\n                                    \"count\": pageSize,\r\n                                    \"offset\": offsetSize,\r\n                                    \"fields\": \"counters,bdate,photo_200\",\r\n                                    \"access_token\": response.access_token\r\n                                }\r\n                            }).then(response => response.response)\r\n                    }\r\n                )\r\n            }).catch( reason => {throw new Error(\"Error Auth User: \" + reason)} );\r\n    }\r\n\r\n};\r\n\r\n","import {getDataAPI} from \"../api/api\";\r\n\r\nconst SET_HOME_PROFILE = 'SET_HOME_PROFILE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\n\r\nlet initialState = {\r\n    photo: null,\r\n    firstName: null,\r\n    secondName: null,\r\n    age: null,\r\n    friendsCount: null,\r\n    isFetching: true\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_HOME_PROFILE:\r\n            return {\r\n                ...state,\r\n                ...action.profile\r\n            };\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        default: return {...state}\r\n    }\r\n};\r\n\r\nexport default homeReducer;\r\n\r\nexport const setHome = (profile) => ({type: SET_HOME_PROFILE, profile});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\n\r\nexport const getHome = () => {\r\n    return (dispatch) => {\r\n        getDataAPI.getProfileInfo().then(\r\n            response =>\r\n            {\r\n                let getAge = () => {\r\n                    let bDate = new Date(response.bdate).getFullYear();\r\n                    if(isNaN(bDate)) {\r\n                        // если год рождения не указан вернется NaN\r\n                        return false\r\n                    }\r\n                    let date = new Date().getFullYear();\r\n                    let age = date - bDate;\r\n                    return age;\r\n                };\r\n\r\n                let profile ={\r\n                    photo: response.photo_200,\r\n                    firstName: response.first_name,\r\n                    secondName: response.last_name,\r\n                    friendsCount: response.counters.friends,\r\n                    age: getAge()\r\n                };\r\n                dispatch(setHome(profile));\r\n                dispatch(toggleIsFetching(false));\r\n            }\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Home from \"./Home\";\r\nimport Spinner from \"@vkontakte/vkui/dist/components/Spinner/Spinner\";\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {connect} from \"react-redux\";\r\nimport {getHome} from \"../../redux/homeReducer\";\r\n\r\nclass HomeContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let profile = {\r\n            photo: this.props.photo,\r\n            firstName: this.props.firstName,\r\n            secondName: this.props.secondName,\r\n            age: this.props.age,\r\n            friendsCount: this.props.friendsCount\r\n        };\r\n        this.props.getHome(profile);\r\n    }\r\n\r\n    render() {\r\n        return this.props.isFetching ?\r\n            <Spinner size=\"large\" style={{ marginTop: 20 }} /> :\r\n            <Home id='home' go={this.props.go} {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        photo: state.home.photo,\r\n        firstName: state.home.firstName,\r\n        secondName: state.home.secondName,\r\n        age: state.home.age,\r\n        friendsCount: state.home.friendsCount,\r\n        isFetching: state.home.isFetching\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {getHome})(HomeContainer);\r\n\r\n","import {getDataAPI} from \"../api/api\";\r\n\r\nconst SET_FRIENDS = 'SET_FRIENDS';\r\nconst SET_OFFSET = 'SET_OFFSET';\r\nconst TOGGLE_FETCHING_DATA = 'TOGGLE_FETCHING_DATA';\r\nconst SET_TO_DEFAULT = 'SET_TO_DEFAULT';\r\n\r\nlet initialState = {\r\n    numberOfFriends: 0,\r\n    friends: [],\r\n    friendsCount: 30,\r\n    offset: 0,\r\n    fetchingData: true\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FRIENDS:\r\n            return {\r\n                ...state,\r\n                friends: [...state.friends ,...action.friends],\r\n                numberOfFriends: action.numberFriends\r\n            };\r\n        case SET_OFFSET:\r\n            return {\r\n                ...state,\r\n                offset: action.count\r\n            };\r\n        case TOGGLE_FETCHING_DATA:\r\n            return {\r\n                ...state,\r\n                fetchingData: action.fetchingState\r\n            };\r\n        case SET_TO_DEFAULT:\r\n            return {\r\n                ...state,\r\n                friends: [],\r\n                numberOfFriends: 0\r\n            };\r\n        default: return {...state}\r\n    }\r\n};\r\n\r\nexport default friendsReducer;\r\n\r\nconst setFriendsData = (friends, numberFriends) => ({type: SET_FRIENDS, friends, numberFriends});\r\nconst setOffset = (count) => ({type: SET_OFFSET, count});\r\nconst setToDefaultFriends = () => ({type: SET_TO_DEFAULT});\r\nconst toggleFetchingData = (fetchingState) => ({type: TOGGLE_FETCHING_DATA, fetchingState});\r\n\r\nexport const getFriends = (pageSize, offsetSize) => {\r\n    return (dispatch) => {\r\n            dispatch(toggleFetchingData(true));\r\n            getDataAPI.getFriends(pageSize, offsetSize).then(\r\n                response => {\r\n                    dispatch(setFriendsData(response.items, response.count));\r\n                    dispatch(toggleFetchingData(false));\r\n                    dispatch(setOffset(offsetSize + pageSize));\r\n\r\n                }\r\n            );\r\n        }\r\n};\r\n\r\nexport const setDefaultData = () => {\r\n    return (dispatch) => {\r\n        dispatch(setToDefaultFriends());\r\n        dispatch(setOffset(0));\r\n        dispatch(toggleFetchingData(true));\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport {platform, IOS} from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon28MessagesOutline from '@vkontakte/icons/dist/28/messages_outline';\r\nimport Icon24Add from '@vkontakte/icons/dist/24/add';\r\nimport PanelHeaderButton from \"@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton\";\r\nimport CellButton from \"@vkontakte/vkui/dist/components/CellButton/CellButton\";\r\nconst Scroll = require('react-scroll');\r\nconst scroller = Scroll.animateScroll;\r\n\r\n\r\nconst osName = platform();\r\n\r\nlet Friends = (props) => {\r\n\r\n    let friendsArray = props.friends.map((element, index) => {\r\n        return <Cell before={<Avatar size={40} src={element.photo_200}/>} after={<Icon28MessagesOutline/>}>\r\n            {`${element.first_name} ${element.last_name}`}\r\n        </Cell>\r\n    });\r\n\r\n    let onClickAdd = () => {\r\n        if (props.offset < props.numberOfFriends) {\r\n            props.getFriends(props.friendsCount, props.offset);\r\n            scroller.scrollTo(48 * (props.offset - 1), {});\r\n        }\r\n    };\r\n\r\n    return <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<PanelHeaderButton onClick={props.go} data-to=\"homeView\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </PanelHeaderButton>}>\r\n            Друзья\r\n        </PanelHeader>\r\n        {friendsArray}\r\n        { props.offset < props.numberOfFriends ?\r\n            <CellButton before={<Icon24Add/>} onClick={onClickAdd}>Показать еще</CellButton>\r\n            : <CellButton mode=\"danger\" before={<Icon24Back/>} onClick={props.go} data-to=\"homeView\">Вернуться назад</CellButton>\r\n        }\r\n    </Panel>\r\n\r\n};\r\n\r\nexport default Friends;\r\n","import React from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {connect} from \"react-redux\";\r\nimport {getFriends, setDefaultData} from \"../../redux/firendsReducer\";\r\nimport Friends from \"./Friends\";\r\nimport Spinner from \"@vkontakte/vkui/dist/components/Spinner/Spinner\";\r\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\r\n\r\n\r\nclass FriendsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getFriends(this.props.friendsCount, this.props.offset);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setDefaultData();\r\n    }\r\n\r\n    render() {\r\n        return this.props.fetchingData ?\r\n            <ScreenSpinner /> :\r\n            <Friends id='friends' go={this.props.go} {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.friendsPage.friends,\r\n        friendsCount: state.friendsPage.friendsCount,\r\n        offset: state.friendsPage.offset,\r\n        fetchingData: state.friendsPage.fetchingData,\r\n        numberOfFriends: state.friendsPage.numberOfFriends\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {getFriends, setDefaultData})(FriendsContainer);\r\n\r\n","import React, {useState} from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport HomeContainer from \"./components/Home/HomeContainer\";\nimport FriendsContainer from \"./components/Friends/FriendsContainer\";\nimport {Root} from \"@vkontakte/vkui\";\n\nconst App = () => {\n    const [activeView, setActiveView] = useState('homeView');\n    const go = e => {\n\t\tsetActiveView(e.currentTarget.dataset.to);\n    };\n\n    return (\n        <Root activeView={activeView}>\n            <View id='homeView' activePanel='home'>\n                <HomeContainer id='home' go={go}/>\n            </View>\n            <View id='friendsView' activePanel='friends'>\n                <FriendsContainer id='friends' go={go}/>\n            </View>\n        </Root>\n    );\n}\n\nexport default App;\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport homeReducer from \"./homeReducer\";\r\nimport friendsReducer from \"./firendsReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    home: homeReducer,\r\n    friendsPage: friendsReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;\r\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<Provider store={store}>\n      <App />\n    </Provider>, document.getElementById(\"root\"));\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n"],"sourceRoot":""}